#!/bin/bash

# -f to delete the existing configuration
if [ "$1" = "-f" ]; then
    rm ~/.bashrc_config
fi

# Install new .bashrc configuration
if [ ! -f ~/.bashrc_config ]; then

    # Check for cPanel server
    # Detect operating system
    WINDOWS=false
    CYGWIN=false
    MSYSGIT=false
    MAC=false
    CPANEL=false
    VAGRANT=false
    ROOT=false

    case "$(uname)" in
        CYGWIN*)  WINDOWS=true; CYGWIN=true ;;
        MINGW32*) WINDOWS=true; MSYSGIT=true ;;
        Darwin)   MAC=true ;;
    esac

    if [ -d /var/cpanel ]; then
        CPANEL=true
    fi

    if [ -d /vagrant -o -d /home/vagrant ]; then
        # The /vagrant directory doesn't always exist at this point, due to
        # https://github.com/npm/npm/issues/3670#issuecomment-82825408
        # so we also check for /home/vagrant
        VAGRANT=true
    fi

    if [ "$(id -u)" = 0 ]; then
        ROOT=true
    fi

    # Generate .bashrc_config
    (
        # Prompt message & colour
        echo "#prompt_default=''"

        if $CPANEL; then
            echo "prompt_type=live #live/staging/dev/special"
        elif $VAGRANT; then
            echo "prompt_type=dev #live/staging/dev/special"
        else
            echo "prompt_type= #live/staging/dev/special"
        fi

        # File permissions
        if $CPANEL; then
           echo "umask_user=022"
        else
           echo "umask_user=002"
        fi

        echo "umask_root=022"

        # Path for 'cw' command - try to guess what's the best directory to use
        if $VAGRANT; then
            # Vagrant - Shared directory
            echo "www_dir=/vagrant"
        elif $CYGWIN; then
            # Cygwin - My Documents
            echo "www_dir=$(cygpath --mydocs)"
        elif $CPANEL && $ROOT; then
            # Live server - Root user
            echo "www_dir=/home"
        elif $CPANEL || [ -d ~/repo ]; then
            # Live server - Git repo
            echo "www_dir=~/repo"
        elif [ -d /home/www ]; then
            # Dev server - Web root
            echo "www_dir=/home/www"
        else
            # Unknown
            echo "www_dir="
        fi
    ) > ~/.bashrc_config

    # Open in editor (if running interactively, not in a Vagrant provisioner)
    if [ -t 0 -a "${1:-}" != "--unattended" ]; then
        vim ~/.bashrc_config
    fi

fi

# No need to check for updates
echo "$(date +%Y%m%d)" > ~/.cfg_last_update
