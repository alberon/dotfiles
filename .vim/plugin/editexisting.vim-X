" This is based on $VIMRUNTIME/macros/editexisting.vim
" But it always reuses the window instead of opening a new one for new files
" For those times where --remote-silent is not used

" May or may not require Vim 7.x - but since I never use <7.x I'll leave this in
if v:version < 700
    finish
endif

" When the plugin is loaded and there is one file name argument:
" Find another Vim server that is editing this file right now.
if argc() == 1 && !&modified

    let filename = expand("%:p")

    let fname_esc = substitute(filename, "'", "''", "g")

    let servers = serverlist()
    while servers != ''

        " Get next server name in "servername"; remove it from "servers".
        let i = match(servers, "\n")
        if i == -1
            let servername = servers
            let servers = ''
        else
            let servername = strpart(servers, 0, i)
            let servers = strpart(servers, i + 1)
        endif

        " Skip ourselves.
        if servername ==? v:servername
            continue
        endif

        " Bring the remote window to the foreground.
        if has("win32")
            call remote_foreground(servername)
        endif
        call remote_expr(servername, "foreground()")

        " Open the buffer in the remote (whether existing or adding a new one)
        if remote_expr(servername, "exists('*OpenBuffer')")
            call remote_expr(servername, "OpenBuffer('" . fname_esc . "')")
            quit
        endif

    endwhile

endif

" Function used on the server to open a file
func! OpenBuffer(fname)
    if exists('*fnameescape')
        exe "edit " . fnameescape(a:fname)
    else
        exe "edit " . escape(a:fname, " \t\n*?[{`$\\%#'\"|!<")
    endif

    redraw
endfunc
